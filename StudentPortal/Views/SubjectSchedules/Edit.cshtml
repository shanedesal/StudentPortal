@model StudentPortal.Models.AddSubjectScheduleViewModel

<div class="container py-4" style="max-width: 800px">
    <h1 class="h3 mb-4">Edit Subject Schedule</h1>
    <form method="post" asp-action="Edit" asp-controller="SubjectSchedules">
        <!-- Hidden field for EDP Code since it shouldn't be editable -->
        <input type="hidden" asp-for="EDPCode" />

        <!-- Display EDP Code as read-only -->
        <div class="mb-3">
            <div class="form-floating">
                <input type="text" class="form-control" value="@Model.EDPCode" disabled />
                <label>EDP Code</label>
            </div>
        </div>

        <!-- Subject Code Section with Search -->
        <div class="mb-4">
            <div class="form-floating">
                <input type="text" class="form-control" asp-for="SubjectCode" placeholder="Subject Code" required />
                <label asp-for="SubjectCode">Subject Code</label>
                <span asp-validation-for="SubjectCode" class="text-danger"></span>
            </div>
            <!-- Keep existing subject results div -->
            <div id="subjectResults" class="mt-2 border rounded-3 overflow-hidden"
                 style="display: none; max-height: 300px; overflow-y: auto;">
                <!-- Existing table content -->
            </div>
        </div>

        <!-- Time Section -->
        <div class="row g-3 mb-4">
            <div class="col-md-6">
                <div class="form-floating">
                    <input type="time" class="form-control" asp-for="StartTime" placeholder="Start Time" required />
                    <label asp-for="StartTime">Start Time</label>
                    <span asp-validation-for="StartTime" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-floating">
                    <input type="time" class="form-control" asp-for="EndTime" placeholder="End Time" required />
                    <label asp-for="EndTime">End Time</label>
                    <span asp-validation-for="EndTime" class="text-danger"></span>
                </div>
            </div>
        </div>

        <!-- Days Section -->
        <div class="mb-4">
            <div class="form-floating">
                <input type="text" class="form-control" asp-for="Days" id="Days"
                       placeholder="Days" maxlength="4" required />
                <label asp-for="Days">Days</label>
                <span asp-validation-for="Days" class="text-danger"></span>
            </div>
            <div id="daysHelp" class="form-text">
                Common patterns: MWF (Mon/Wed/Fri), TTH (Tue/Thu), TTHS (Tue/Thu/Sat), or single days (MON,TUE,WED,THU,FRI,SAT)
            </div>
        </div>

        <!-- Room and Size Section -->
        <div class="row g-3 mb-4">
            <div class="col-md-4">
                <div class="form-floating">
                    <input type="text" class="form-control" asp-for="Room" placeholder="Room" maxlength="3" required />
                    <label asp-for="Room">Room</label>
                    <span asp-validation-for="Room" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-floating">
                    <input type="number" class="form-control" asp-for="MaxSize" placeholder="Maximum Size" min="1" max="100" required />
                    <label asp-for="MaxSize">Maximum Size</label>
                    <span asp-validation-for="MaxSize" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-floating">
                    <input type="number" class="form-control" asp-for="ClassSize" placeholder="Class Size" min="0" max="100" />
                    <label asp-for="ClassSize">Class Size</label>
                    <span asp-validation-for="ClassSize" class="text-danger"></span>
                </div>
            </div>
        </div>

        <!-- Status, Section, and School Year -->
        <div class="row g-3 mb-4">
            <div class="col-md-4">
                <div class="form-floating">
                    <select class="form-select h-100" asp-for="Status">
                        <option value="">-- Select --</option>
                        <option value="ACT">Active</option>
                        <option value="INA">Inactive</option>
                        <option value="DIS">Dissolved</option>
                        <option value="RES">Restricted</option>
                        <option value="CLO">Closed</option>
                    </select>
                    <label asp-for="Status">Status</label>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-floating">
                    <input type="text" class="form-control" asp-for="Section" placeholder="Section" maxlength="3" required />
                    <label asp-for="Section">Section</label>
                    <span asp-validation-for="Section" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-floating">
                    <select class="form-select h-100" asp-for="SchoolYear">
                        <option value="">-- Select --</option>
                        <option value="1">1st Year</option>
                        <option value="2">2nd Year</option>
                        <option value="3">3rd Year</option>
                        <option value="4">4th Year</option>
                    </select>
                    <label asp-for="SchoolYear">School Year</label>
                    <span asp-validation-for="SchoolYear" class="text-danger"></span>
                </div>
            </div>
        </div>

        <!-- Form Buttons -->
        <div class="row g-3">
            <div class="col-md-6">
                <button type="submit" class="btn btn-outline-primary w-100 py-2">Save Changes</button>
            </div>
            <div class="col-md-6">
                <a asp-action="List" class="btn btn-outline-secondary w-100 py-2">Cancel</a>
            </div>
        </div>
    </form>
</div>
<script>
    let searchTimeout;

    // First, verify the element exists
    const subjectCodeInput = document.getElementById('SubjectCode');
    if (!subjectCodeInput) {
        console.error('SubjectCode input not found');
    }

    // Add logging to the input event listener
    subjectCodeInput.addEventListener('input', function (e) {
        console.log('Input event triggered:', e.target.value);

        clearTimeout(searchTimeout);
        const searchValue = e.target.value.trim();
        const resultsDiv = document.getElementById('subjectResults');

        if (searchValue.length < 2) {
            resultsDiv.style.display = 'none';
            return;
        }

        searchTimeout = setTimeout(() => {
            console.log('Searching for:', searchValue);

            // Add explicit URL and logging
            const searchUrl = `/SubjectSchedules/SearchSubjects?term=${encodeURIComponent(searchValue)}`;
            console.log('Search URL:', searchUrl);

            fetch(searchUrl)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Search results:', data);
                    const tbody = document.querySelector('#subjectsTable tbody');
                    tbody.innerHTML = '';

                    if (data.length === 0) {
                        tbody.innerHTML = '<tr><td colspan="3" class="text-center">No results found</td></tr>';
                        resultsDiv.style.display = 'block';
                        return;
                    }

                    data.forEach(subject => {
                        const row = `
                                        <tr class="subject-row">
                                            <td class="subject-code">${subject.subjectCode}</td>
                                            <td>${subject.description}</td>
                                            <td>
                                                <button type="button" class="btn btn-sm btn-outline-primary"
                                                        onclick="selectSubject('${subject.subjectCode}')">
                                                    Select
                                                </button>
                                            </td>
                                        </tr>
                                    `;
                        tbody.innerHTML += row;
                    });

                    resultsDiv.style.display = 'block';
                })
                .catch(error => {
                    console.error('Error:', error);
                    const tbody = document.querySelector('#subjectsTable tbody');
                    tbody.innerHTML = '<tr><td colspan="3" class="text-center text-danger">Error loading results</td></tr>';
                    resultsDiv.style.display = 'block';
                });
        }, 300);
    });

    function selectSubject(subjectCode) {
        console.log('Selecting subject:', subjectCode);
        document.getElementById('SubjectCode').value = subjectCode;
        document.getElementById('subjectResults').style.display = 'none';
    }

    // Close results when clicking outside
    document.addEventListener('click', function (e) {
        const resultsDiv = document.getElementById('subjectResults');
        const subjectInput = document.getElementById('SubjectCode');

        if (!resultsDiv.contains(e.target) && e.target !== subjectInput) {
            resultsDiv.style.display = 'none';
        }
    });

    $("#scheduleForm").on("submit", function (e) {
        const startTime = $("#StartTime").val();
        const endTime = $("#EndTime").val();

        if (startTime === endTime) {
            e.preventDefault();
            $("#timeValidationError").text("Class schedule start time and end time cannot be the same");
            $("#EndTime").addClass("is-invalid");
            return false;
        }

        $("#timeValidationError").text("");
        $("#EndTime").removeClass("is-invalid");
        return true;
    });

    // Real-time validation as user types/changes times
    $("#StartTime, #EndTime").on("change", function () {
        const startTime = $("#StartTime").val();
        const endTime = $("#EndTime").val();

        if (startTime && endTime) {
            if (startTime === endTime) {
                $("#timeValidationError").text("Class schedule start time and end time cannot be the same");
                $("#EndTime").addClass("is-invalid");
            } else {
                $("#timeValidationError").text("");
                $("#EndTime").removeClass("is-invalid");
            }
        }
    });

    $(document).ready(function () {
        const validPatterns = [
            'MWF', 'TTH', 'TTHS',
            'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'
        ];

        // Convert input to uppercase and validate schedule pattern
        $('#Days').on('input', function () {
            this.value = this.value.toUpperCase();

            // Show suggestions if input starts matching a pattern
            const currentValue = this.value;
            if (currentValue.length > 0) {
                const matches = validPatterns.filter(pattern =>
                    pattern.startsWith(currentValue));

                if (matches.length > 0) {
                    $('#daysHelp').html('Matching patterns: ' + matches.join(', '));
                } else {
                    $('#daysHelp').html('No matching schedule patterns found. Valid patterns: MWF, TTH, TTHS, or single days (MON,TUE,WED,THU,FRI,SAT)');
                }
            } else {
                $('#daysHelp').html('Common patterns: MWF (Mon/Wed/Fri), TTH (Tue/Thu), TTHS (Tue/Thu/Sat), or single days (MON,TUE,WED,THU,FRI,SAT)');
            }
        });

        // Add custom validation method
        $.validator.addMethod('validSchedulePattern', function (value, element) {
            return validPatterns.includes(value.toUpperCase());
        }, 'Please enter a valid schedule pattern (MWF, TTH, TTHS, or single days MON,TUE,WED,THU,FRI,SAT)');

        // Add validation rules
        $('#Days').rules('add', {
            validSchedulePattern: true
        });
    });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
   
}
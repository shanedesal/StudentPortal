@using StudentPortal.Models;
@model ChangePasswordViewModel;

@{
    ViewData["Title"] = "Change Password";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}

<div class="form-container">
    <h2 class="text-center mb-4">CHANGE PASSWORD</h2>

    <form asp-action="ChangePassword" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group">
            <label asp-for="Email" class="form-label"></label>
            <input asp-for="Email" class="form-control" readonly />
        </div>

        <div class="form-group">
            <label asp-for="NewPassword" class="form-label"></label>
            <div class="input-group">
                <input asp-for="NewPassword" class="form-control" placeholder="Enter new password" type="password" id="newPasswordInput" />
                <span class="input-group-text">
                    <button type="button" class="btn toggle-password-btn" id="toggleNewPassword">
                        <i class="bi bi-eye-slash fs-5" id="toggleNewIcon"></i>
                    </button>
                </span>
            </div>
            <span asp-validation-for="NewPassword" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="ConfirmNewPassword" class="form-label"></label>
            <div class="input-group">
                <input asp-for="ConfirmNewPassword" class="form-control" placeholder="Confirm new password" type="password" id="confirmNewPasswordInput" />
                <span class="input-group-text">
                    <button type="button" class="btn toggle-password-btn" id="toggleConfirmNewPassword">
                        <i class="bi bi-eye-slash fs-5" id="toggleConfirmNewIcon"></i>
                    </button>
                </span>
            </div>
            <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
        </div>

        <div class="d-grid gap-2">
            <button type="submit" class="btn btn-primary" id="cpSubmitButton">Submit</button>
            <a asp-action="VerifyEmail" asp-controller="Account" class="btn btn-outline-secondary" id="cpBackButton">Back</a>
        </div>
    </form>
</div>

<style>
    .form-container {
        max-width: 400px;
        margin: 40px auto;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-links {
        margin-bottom: 1.5rem;
    }

    .btn {
        width: 100%;
        margin-bottom: 0.75rem;
        padding: 0.75rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .input-group-text {
        background-color: transparent;
        border: none;
        padding-left: 0;
    }

    .input-group > .form-control {
        border-right: none;
    }

    .toggle-password-btn {
        border: 1px solid var(--bs-border-color);
        border-left: none;
        background: transparent;
        color: inherit;
    }

        .toggle-password-btn:hover,
        .toggle-password-btn:focus {
            background-color: transparent;
            color: inherit;
        }

    .input-group > .form-control:not(:last-child) {
        border-radius: 0.375rem;
    }
</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");
    }
    <script>
        // Function to create password toggles
        function createPasswordToggle(inputId, toggleId, iconId) {
            document.getElementById(toggleId).addEventListener('click', function (e) {
                e.preventDefault();
                const passwordInput = document.getElementById(inputId);
                const toggleIcon = document.getElementById(iconId);

                if (passwordInput.type === 'password') {
                    passwordInput.type = 'text';
                    toggleIcon.classList.remove('bi-eye-slash');
                    toggleIcon.classList.add('bi-eye');
                } else {
                    passwordInput.type = 'password';
                    toggleIcon.classList.remove('bi-eye');
                    toggleIcon.classList.add('bi-eye-slash');
                }
            });
        }

        // Initialize password toggles for all password fields
        if (document.getElementById('passwordInput')) {
            createPasswordToggle('passwordInput', 'togglePassword', 'toggleIcon');
        }
        if (document.getElementById('confirmPasswordInput')) {
            createPasswordToggle('confirmPasswordInput', 'toggleConfirmPassword', 'toggleConfirmIcon');
        }
        if (document.getElementById('newPasswordInput')) {
            createPasswordToggle('newPasswordInput', 'toggleNewPassword', 'toggleNewIcon');
        }
        if (document.getElementById('confirmNewPasswordInput')) {
            createPasswordToggle('confirmNewPasswordInput', 'toggleConfirmNewPassword', 'toggleConfirmNewIcon');
        }
    </script>
}